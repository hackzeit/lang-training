Introducción a C/C++
Sentencias y control de flujo
13:06 2 Oct 2014
Tags: C, C++

Frank A. Moreno Vera
frankmoreno1993@gmail.com


* Introducción

* Hemos visto ...

En secciones anteriores hemos visto que las instrucciones se ejecutan en el
mismo orden en el que aparecen. Pero un programa no solo se limita a seguir
una secuencias de pasos fija.

* Un programa debe ser capaz de ...

- Repetir segmentos de código
- Tomar decisiones
- y Bifurcarse (hacer saltos)

Todo esto cuando se le sea especificado o bajo ciertas circunstancias.
Para este propósito, C/C++ brinda sentencias para el *control*de*flujo*.

* Hablemos sobre sentencias

Muchas de las sentencias de control de flujo explicadas en esta sección
requieren un (sub)conjunto genérico como parte de la sintaxis. Estas
sentencias podrían ser una de ambas:

- Una sentencia simple.
- Sentencias compuestas.


* Sentencias simples

Las sentencias simple que terminan en punto y coma (`;`).

Ejemplo:

  // La declaración una variable
  int a;

  // Llamada a una función
  int N = factorial(5);

* Sentencias compuestas

Es un grupo de sentencias simples (cada una con su propio punto y coma)
limitadas por llaves(`{}`).

Ejemplo:

  // En una sola línea
  { sentencia1; sentencia2; sentencia3; }

  // En varias líneas
  {
    sentencia1;
    sentencia2;
    sentencia3;
  }

* Sentencias de control

Se categorizan en:

- Sentencias de decisión(if-else y switch-case.md).
- Sentencias de iteración (while, do-while y for).
- Sentencias de salto (goto, break y continue).

* El orden en el que veremos las sentencias de control son:
- if-else
- switch-case
- goto
- while
- do-while
- for, break y continue

* Sentencias de control

* if - else (parte 1 de 3)

*Sentencia*if*
- Evaluamos una expresión, por lo general, booleana <condición a evaluar> (V o F).
- Si la condición es verdadera, se ejecuta <sentencia simple o compuesta>.

.image ../img/if1.svg 700 _

  if ( <condión a evaluar> )
    <sentencia simple o compuesta>

* if - else (parte 2 de 3)

*Sentencia*if*
- Evaluamos una expresión, por lo general, booleana <condición a evaluar> (V o F).
- Si la condición es verdadera, se ejecuta <sentencia simple o compuesta 1>.
- Si la condición es falsa, se ejecuta <sentencia simple o compuesta 2>.

.image ../img/if2.png 700 _

  if ( <condición a evaluar )
    <sentencia simple o compuesta 1>
  else
    <sentencia simple o compuest 2>

* if - else (parte 3 de 3)
.image ../img/if3.svg

* switch - case

* goto

* do-while

* for, break y continue (parte 1 de 3)

* for, break y continue (parte 2 de 3)

* for, break y continue (parte 3 de 3)
